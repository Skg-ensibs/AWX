---
- name: Déploiement simulé d’une infrastructure personnalisée
  hosts: all
  gather_facts: false

  vars:
    Reponse_1: "73"
    Reponse_2: "45"
    Reponse_3: "Nom_de_domaine"
    Reponse_4: "Oui"
    Reponse_5: "Non"
    Reponse_6: "Non"
    Reponse_7: "Oui"

  tasks:

    - name: Résumé situation
      debug:
        msg: |
          - Employés : {{ Reponse_1 }}
          - Postes : {{ Reponse_2 }}
          - Domaine : {{ Reponse_3 }}

    - name: Configuration du domaine
      shell: |
        echo "Configuration du domaine {{ Reponse_3 }}..."
        sleep 1
      register: domaine_result
      changed_when: true

    - name: Affichage résultat domaine
      debug:
        var: domaine_result.stdout

    - name: Gestion serveur FTP
      shell: |
        {% if Reponse_4 | lower == "oui" %}
        echo "Besoin de partage de fichiers détecté : déploiement du serveur FTP."
        sleep 1
        {% else %}
        echo "Aucun besoin de partage massif de fichiers : pas de serveur FTP déployé "
        {% endif %}
      register: ftp_result
      changed_when: true

    - name: Gestion serveur Web 
      shell: |
        {% if Reponse_5 | lower == "oui" %}
        echo "Site web requis : déploiement du serveur web."
        sleep 1
        {% else %}
        echo "Pas de site web demandé : aucun serveur web déployé "
        {% endif %}
      register: web_result
      changed_when: true

    - name: Gestion serveur Mail 
      shell: |
        {% if Reponse_6 | lower == "oui" %}
        echo "Échange de mails requis : déploiement du serveur mail."
        sleep 1
        {% else %}
        echo "Pas de service mail requis : aucun serveur mail déployé "
        {% endif %}
      register: mail_result
      changed_when: true

    - name: Gestion supervision (SIEM)
      shell: |
        {% if Reponse_7 | lower == "oui" %}
        echo "Supervision requise : déploiement de Zabbix + agents."
        sleep 1
        {% else %}
        echo "Pas de supervision nécessaire : SIEM non déployé "
        {% endif %}
      register: siem_result
      changed_when: true

    - name: Résumé final
      debug:
        msg: |
          Résumé des composants simulés :
          - Domaine : {{ Reponse_3 }}
          - FTP     : {{ 'Déployé' if Reponse_4 | lower == 'oui' else 'Non déployé ' }}
          - Web     : {{ 'Déployé' if Reponse_5 | lower == 'oui' else 'Non déployé ' }}
          - Mail    : {{ 'Déployé' if Reponse_6 | lower == 'oui' else 'Non déployé ' }}
          - SIEM    : {{ 'Déployé' if Reponse_7 | lower == 'oui' else 'Non déployé ' }}
    - name: Lancer les commandes AWX
      shell: |
        AWX_HOST="http://127.0.0.1:8080"
        AWX_TOKEN="yPLLeIEXMVoEImY2Qh0ixIG78puxQA"
        INVENTORY="TPE-Inventaire"
        PROJECT="SIMON"

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Déploiement partage fichiers" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "deploy_file_share.yml" \
          --extra_vars '{"share_name": "documents", "share_path": "/srv/documents", "allowed_users": ["jean", "julie"], "access_mode": "rw"}' \
          --ask_variables_on_launch true

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Ajout utilisateur" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "add_user.yml" \
          --extra_vars '{"username": "jdupont", "full_name": "Jean Dupont", "groups": ["sudo", "smb"], "create_home": true}' \
          --ask_variables_on_launch true

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Suppression utilisateur" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "delete_user.yml" \
          --extra_vars '{"username": "lucas", "remove_home": true}' \
          --ask_variables_on_launch true

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Modification permissions utilisateur" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "modify_user_permissions.yml" \
          --extra_vars '{"username": "alice", "add_groups": ["smb", "dev"], "remove_groups": ["test", "guests"]}' \
          --ask_variables_on_launch true

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Création partage réseau" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "create_network_share.yml" \
          --extra_vars '{"share_name": "partage_client", "share_path": "/srv/partage_client", "allowed_users": ["jean", "julie"], "protocol": "nfs", "read_only": true}' \
          --ask_variables_on_launch true

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Mise à jour système" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "system_update.yml" \
          --extra_vars '{"os_family": "debian", "perform_upgrade": true, "reboot_if_required": false}' \
          --ask_variables_on_launch true

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Déploiement serveur web" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "deploy_web_server.yml" \
          --extra_vars '{"web_server": "apache", "document_root": "/var/www/my_site", "server_name": "site.tpe.local", "enable_ssl": true}' \
          --ask_variables_on_launch true

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Sauvegarde serveur" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "backup_server.yml" \
          --extra_vars '{"backup_sources": ["/home", "/var/lib/mysql"], "backup_destination": "/mnt/backup", "compress_backup": true, "retention_days": 14}' \
          --ask_variables_on_launch true

        awx --conf.host $AWX_HOST --conf.token $AWX_TOKEN job_template create \
          --name "Réinitialisation mot de passe" \
          --inventory "$INVENTORY" \
          --project "$PROJECT" \
          --playbook "reset_password.yml" \
          --extra_vars '{"username": "jean", "new_password": "Ch@ngeMe123!"}' \
          --ask_variables_on_launch true
      register: awx_result
      changed_when: true

    - name: Affichage résultat des commandes AWX
      debug:
        var: awx_result.stdout
